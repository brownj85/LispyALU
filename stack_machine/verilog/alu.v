// File: alu.v
// Generated by MyHDL 0.10
// Date: Wed Nov 28 12:53:59 2018


`timescale 1ns/10ps

module alu (
    alu_a,
    alu_b,
    alu_op,
    alu_out,
    go,
    done,
    err_flag,
    clock,
    reset_n
);


input [15:0] alu_a;
input [15:0] alu_b;
input [15:0] alu_op;
output [15:0] alu_out;
reg [15:0] alu_out;
input go;
output done;
reg done;
output err_flag;
reg err_flag;
input clock;
input reset_n;




always @(posedge clock) begin: ALU_ALU_OPS
    if ((reset_n == 0)) begin
        err_flag <= 0;
    end
    else if (go) begin
        case (alu_op)
            'h2b: begin
                alu_out <= ($signed(alu_a) + $signed(alu_b));
            end
            'h2d: begin
                alu_out <= ($signed(alu_a) - $signed(alu_b));
            end
            'h2f: begin
                alu_out <= ($signed(alu_a) / $signed(alu_b));
            end
            default: begin
                alu_out <= ($signed(alu_a) * $signed(alu_b));
            end
        endcase
        done <= 1;
    end
    else begin
        done <= 0;
    end
end

endmodule
