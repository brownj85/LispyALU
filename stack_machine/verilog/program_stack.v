// File: program_stack.v
// Generated by MyHDL 0.10
// Date: Wed Nov 28 12:53:59 2018


`timescale 1ns/10ps

module program_stack (
    stack_top,
    data_in,
    push,
    pop,
    empty,
    err_flag,
    clock,
    reset_n
);


output [17:0] stack_top;
wire [17:0] stack_top;
input [17:0] data_in;
input push;
input pop;
output empty;
wire empty;
output err_flag;
reg err_flag;
input clock;
input reset_n;

reg [7:0] stack_ptr;
reg [7:0] size_ctr;
reg [17:0] stack [0:129-1];



always @(posedge clock) begin: PROGRAM_STACK_LOGIC
    if ((reset_n == 0)) begin
        stack_ptr <= 128;
        size_ctr <= 0;
        err_flag <= 0;
    end
    else if ((push == 1)) begin
        stack_ptr <= (stack_ptr - 1);
        stack[($signed({1'b0, stack_ptr}) - 1)] <= data_in;
        size_ctr <= (size_ctr + 1);
    end
    else if (((pop == 1) && (!stack_ptr[7]))) begin
        stack_ptr <= (stack_ptr + 1);
        size_ctr <= (size_ctr - 1);
        stack[stack_ptr] <= 0;
    end
end



assign stack_top = stack[stack_ptr];
assign empty = stack_ptr[7];

endmodule
